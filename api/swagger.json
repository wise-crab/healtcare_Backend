{
  "swagger": "2.0.0",
  "info": {
    "description": "The Laboratory (bacteriologist) wants a proper channel where can have a straight flow of information among him and the Doctor with the patient supervision. Due to the fact that the laboratory is aware that the patient wants to have a track report of the process, the laboratory developed Examedic in order to satisfy its clients informing on real-time about when his result of exam is available and a proper track of their information.",
    "version": "1.0.0",
    "title": "Examedic Backend"
  },
  "host": "https://examedic.wl.r.appspot.com",
  "basePath": "/",
  "tags": [
    {
      "name": "user",
      "description": "This are a CRUD operation for the users this only can be do if your are an admin"
    }
  ],
  "schemes": ["http", "https"],
  "paths": {
    "/login": {
      "post": {
        "tags": ["login"],
        "summary": "user login",
        "description": "Create a jwt ",
        "operationId": "Login",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["user"],
        "summary": "Create user",
        "description": "This can only be done by and admin.",
        "operationId": "createUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "get": {
        "tags": ["user"],
        "summary": "Global user search",
        "description": "This can only be done by and admin.",
        "operationId": "globalSearch",
        "produces": ["application/json"],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users/user": {
      "get": {
        "tags": ["user"],
        "summary": "Search a user",
        "description": "This can only be done by and admin, medic or bacte.",
        "operationId": "userSearch",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "description": "name or document search",
            "required": true
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users-rol": {
      "get": {
        "tags": ["user"],
        "summary": "Get user by rol",
        "description": "This can only be done by admin, medic or bacteriologits.",
        "operationId": "rolSearch",
        "produce": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "description": "req.query rol",
            "required": true,
            "responses": {
              "default": {
                "description": "successful operation"
              }
            }
          }
        ]
      }
    },
    "/users-csv": {
      "post": {
        "tags": ["user"],
        "summary": "mass creation of users",
        "description": "This can only be done by and admin.",
        "operationId": "createUserCsv",
        "parameters": [
          {
            "in": "formData",
            "type": "file",
            "name": "csv",
            "description": "file",
            "required": true
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users/:id": {
      "put": {
        "tags": ["user"],
        "summary": "Update a user",
        "description": "This can only be done by and admin",
        "operationId": "updateUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Update user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/exams": {
      "get": {
        "tags": ["Exams"],
        "summary": "Global exams search",
        "description": "This can only be done by and docto or bacteriologist.",
        "operationId": "globalSearch",
        "produces": ["application/json"],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": ["Exams"],
        "summary": "Add and Exam",
        "description": "Create a jwt ",
        "operationId": "addExams",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Exam"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": ["Exams"],
        "summary": "Update a Exam",
        "description": "This can only be done by and doctor or bacteriologist",
        "operationId": "updateExam",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Update exam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Exam'"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/exams/:id": {
      "put": {
        "tags": ["Exams"],
        "summary": "Search an exam",
        "description": "This can only be done by and Doctor",
        "operationId": "searchExam",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Search exam",
            "required": true
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/exams-query": {
      "get": {
        "tags": ["Exams"],
        "summary": "Exam by patient",
        "description": "Create a JSON",
        "operationId": "examByPatient",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Exam"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/types-exams": {
      "post": {
        "tags": ["Types Exams"],
        "summary": "Create a type of exam",
        "description": "Create a jwt ",
        "operationId": "createTypeExam",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Type-Exam"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/types-exams/:id": {
      "put": {
        "tags": ["Types Exams"],
        "summary": "Update a Type exam",
        "description": "This can only be done by and Doctor",
        "operationId": "updateTypeExam",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Update Type Exam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Type-Exam"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "examedic_auth": {
      "type": "bearer Token",
      "authorizationUrl": "https://examedic.wl.r.appspot.com/login",
      "flow": "Emplicit"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "numberId": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "contactNumber": {
          "type": "number"
        },
        "rol": {
          "type": "string"
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Exam": {
      "type": "object",
      "properties": {
        "idPatient": {
          "type": "string"
        },
        "idDoctor": {
          "type": "string"
        },
        "typeOfExam": {
          "type": "string"
        }
      }
    },
    "Type-Exam": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
